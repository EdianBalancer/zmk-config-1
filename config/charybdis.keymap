#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h> 
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mt { quick-tap-ms = <200>; };
&lt { quick-tap-ms = <200>; flavor = "hold-preferred"; };
&sk { release-after-ms = <2000>; quick-release; lazy; };

/ {
  macros {
    ctrl_mo1: ctrl_mo1 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; 
                         bindings = <&macro_press &kp LCTRL>, <&macro_press &mo 1>,    <&macro_pause_for_release>, <&macro_release &mo 1>,    <&macro_release &kp LCTRL>; };
    shft_alt: shft_alt { compatible = "zmk,behavior-macro"; #binding-cells = <0>; 
                         bindings = <&macro_press &kp RSHFT>, <&macro_press &kp LALT>, <&macro_pause_for_release>, <&macro_release &kp LALT>, <&macro_release &kp RSHFT>; };
    winpower: winpower { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <200>; bindings = <&kp LG(X)>, <&kp U>; };
  }; 
  behaviors {
    ls: layer_sticky { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; quick-tap-ms = <200>; flavor = "hold-preferred"; bindings = <&mo>, <&sk>; };
    ms: modif_sticky { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; quick-tap-ms = <200>; flavor = "hold-preferred"; bindings = <&kp>, <&sk>; };
    c1_kp: ctrl_1_kp { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; quick-tap-ms = <200>; flavor = "hold-preferred"; bindings = <&ctrl_mo1>, <&kp>; };
    sa_cw: ctrl_1_cw { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; quick-tap-ms = <200>; flavor = "hold-preferred"; bindings = <&shft_alt>, <&caps_word>; };
    sa_kp: ctrl_1_kp { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; quick-tap-ms = <200>; flavor = "hold-preferred"; bindings = <&shft_alt>, <&kp>; };
  };
  combos { compatible = "zmk,combos";
    left_finger_12_row_4_layer_0 { require-prior-idle-ms = <(-1)>; layers = <0>; key-positions = <48 49>; bindings = <&ls 3 LALT>; };
    left_finger_01_row_4_layer_0 { require-prior-idle-ms = <(-1)>; layers = <0>; key-positions = <49 50>; bindings = <&c1_kp X LSHFT>; };
    rght_finger_01_row_4_layer_0 { require-prior-idle-ms = <(-1)>; layers = <0>; key-positions = <51 52>; bindings = <&sa_cw X X>; };
    rght_finger_01_row_4_layer_1 { require-prior-idle-ms = <(-1)>; layers = <1>; key-positions = <51 52>; bindings = <&sa_kp X CAPS>; };
    left_finger_12_row_3_layer_1 { require-prior-idle-ms = <(-1)>; layers = <1>; key-positions = <39 40>; bindings = <&mkp MCLK>; };
  };
  keymap { compatible = "zmk,keymap";
    layer_0 { bindings = <
&kp ESC         &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp BSLH
&kp EQUAL       &kp Q           &kp W           &kp F           &kp P           &kp B           &kp J           &kp L           &kp U           &kp Y           &kp SEMI        &kp LBKT
&kp MINUS       &kp A           &kp R           &kp S           &kp T           &kp G           &kp M           &kp N           &kp E           &kp I           &kp O           &kp SQT
&kp GRAVE       &kp Z           &kp X           &kp C           &kp D           &kp V           &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH        &kp RBKT
                                                &ls 2 LGUI      &lt 1 SPACE     &mt LCTRL TAB   &mt LALT TAB    &ms RSHFT RSHFT
                                                                &kp LGUI        &kp LSHFT       &kp RCTRL >; };
   layer_1 { bindings = <
&kp F12         &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
&kp C_VOL_UP    &mt LCTRL HOME  &kp BSPC        &kp UP          &kp DEL         &kp PG_UP       &kp LBKT        &kp N7          &kp N8          &kp N9          &kp PLUS        &kp C_BRI_UP
&kp C_MUTE      &mt LALT ESC    &kp LEFT        &kp ENTER       &kp RIGHT       &kp TAB         &kp BSLH        &kp N4          &kp N5          &kp N6          &kp N0          &kp K_APP
&kp C_VOL_DN    &mt LSHFT END   &mkp RCLK       &kp DOWN        &mkp LCLK       &kp PG_DN       &kp RBKT        &kp N1          &kp N2          &kp N3          &kp MINUS       &kp C_BRI_DN
                                                &mo 3           &none           &kp LCTRL       &mt LALT INS    &mt RSHFT SPACE
                                                                &trans          &trans          &trans >; };
    layer_2 { bindings = <
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_DISC 4   &bt BT_DISC 3   &bt BT_DISC 2   &bt BT_DISC 1   &bt BT_DISC 0   &bootloader
&kp C_PREV      &kp LCTRL       &kp PLUS        &kp COLON       &kp GRAVE       &kp PRCNT       &kp CARET       &kp AMPS        &kp DQT         &kp SQT         &kp DLLR        &kp PSCRN
&kp C_PP        &kp LALT        &kp MINUS       &kp EQUAL       &kp GT          &kp TILDE       &kp AT          &kp LBRC        &kp LPAR        &kp RPAR        &kp RBRC        &kp SLCK
&kp C_NEXT      &kp QMARK       &kp EXCL        &kp PIPE        &kp LT          &kp BSLH        &kp POUND       &kp UNDER       &kp LBKT        &kp RBKT        &kp ASTRK       &kp PAUSE_BREAK
                                                &none           &mo 3           &mo 4           &kp LALT        &mt RCTRL SPACE
                                                                &trans          &trans          &trans >; };
    layer_3 { bindings = <
&none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none
&none           &kp LCTRL       &kp F9          &kp F8          &kp F7          &kp F10         &none           &kp PSCRN       &kp C_VOL_UP    &kp SLCK        &kp C_BRI_UP    &none
&none           &kp LALT        &kp F6          &kp F5          &kp F4          &kp F11         &winpower       &kp C_PREV      &kp C_MUTE      &kp C_NEXT      &kp C_PP        &none
&none           &kp LSHFT       &kp F3          &kp F2          &kp F1          &kp F12         &none           &kp K_APP       &kp C_VOL_DN    &kp PAUSE_BREAK &kp C_BRI_DN    &none
                                                &none           &none           &none           &kp LALT        &kp RSHFT
                                                                &trans          &trans          &trans >; };
    layer_4 { bindings = <
&none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none
&none           &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bl BL_DEC      &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &none
&none           &bt BT_CLR      &bt BT_PRV      &out OUT_TOG    &bt BT_NXT      &bt BT_CLR_ALL  &bl BL_TOG      &rgb_ug RGB_EFR &rgb_ug RGB_TOG &rgb_ug RGB_EFF &studio_unlock  &none
&none           &bt BT_DISC 0   &bt BT_DISC 1   &bt BT_DISC 2   &bt BT_DISC 3   &bt BT_DISC 4   &bl BL_INC      &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &none
                                                &none           &bootloader     &none           &none           &bootloader
                                                                &none           &none           &none >; };
  };
};
