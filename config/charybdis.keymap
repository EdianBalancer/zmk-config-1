#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>

&mt { quick-tap-ms = <200>; };
&lt { quick-tap-ms = <200>; flavor = "hold-preferred"; };
&sk { release-after-ms = <2000>; quick-release; lazy; };

/ {
    behaviors {
        ms: mod_sticky { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <200>; flavor = "hold-preferred"; bindings = <&kp>, <&sk>; };
        ls: lyr_sticky { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; tapping-term-ms = <200>; quick-tap-ms = <200>; flavor = "hold-preferred"; bindings = <&mo>, <&sk>; };
    };
    keymap {
        compatible = "zmk,keymap";
        layer_0 { bindings = <
&kp GRAVE           &kp N1              &kp N2              &kp N3              &kp N4              &kp N5                  &kp N6              &kp N7              &kp N8              &kp N9              &kp N0              &kp BSLH
&kp EQUAL           &kp Q               &kp W               &kp F               &kp P               &kp B                   &kp J               &kp L               &kp U               &kp Y               &kp SEMI            &kp LBKT
&kp MINUS           &kp A               &kp R               &kp S               &kp T               &kp G                   &kp M               &kp N               &kp E               &kp I               &kp O               &kp SQT
&kp LSHFT           &kp Z               &kp X               &kp C               &kp D               &kp V                   &kp K               &kp H               &kp COMMA           &kp DOT             &kp FSLH            &kp RBKT
                                                            &ls 1 LGUI          &lt 2 SPACE         &ms LCTRL LSHFT         &mt LALT SPACE      &ms RSHFT RSHFT
                                                                                &kp LALT            &kp LSHFT               &kp RCTRL >; };
        layer_1 { bindings = <
&none               &none               &none               &none               &none               &none                   &none               &none               &none               &none               &none               &none
&kp C_PREV          &kp LCTRL           &kp F9              &kp F8              &kp F7              &kp F10                 &none               &kp PSCRN           &kp C_VOL_UP        &kp K_APP           &kp C_BRI_UP        &none
&kp C_PP            &kp LSHFT           &kp F6              &kp F5              &kp F4              &kp F11                 &none               &kp C_PREV          &kp C_PP            &kp C_NEXT          &kp C_MUTE          &none
&kp C_NEXT          &kp LALT            &kp F3              &kp F2              &kp F1              &kp F12                 &none               &kp SLCK            &kp C_VOL_DN        &kp PAUSE_BREAK     &kp C_BRI_DN        &none
                                                            &trans              &trans              &trans                  &trans              &trans
                                                                                &trans              &trans                  &trans >; };
        layer_2 { bindings = <
&kp F12             &kp F1              &kp F2              &kp F3              &kp F4              &kp F5                  &kp F6              &kp F7              &kp F8              &kp F9              &kp F10             &kp F11
&kp C_VOL_UP        &mt LCTRL HOME      &kp BSPC            &kp UP              &kp DEL             &kp END                 &kp FSLH            &kp N7              &kp N8              &kp N9              &kp PLUS            &kp C_PREV
&kp C_MUTE          &mt LSHFT ESC       &kp LEFT            &kp ENTER           &kp RIGHT           &kp TAB                 &kp ASTRK           &kp N4              &kp N5              &kp N6              &kp DOT             &kp C_PP
&kp C_VOL_DN        &mt LALT PG_UP      &mkp RCLK           &mkp DOWN           &mkp LCLK           &kp PG_DN               &kp INS             &kp N1              &kp N2              &kp N3              &kp MINUS           &kp C_NEXT
                                                            &trans              &trans              &trans                  &kp CAPS            &kp N0
                                                                                &trans              &trans                  &trans >; };
        layer_3 { bindings = <
&none               &none               &none               &none               &none               &none                   &none               &none               &none               &none               &none               &none
&kp C_BRI_UP        &kp LCTRL           &kp PLUS            &kp COLON           &kp QMARK           &kp BSLH                &kp CARET           &kp AMPS            &kp SQT             &kp DQT             &kp DLLR            &none
&kp K_APP           &kp EQUAL           &kp MINUS           &kp LT              &kp GT              &kp PIPE                &kp EXCL            &kp LPAR            &kp RPAR            &kp LBRC            &kp RBRC            &none
&kp C_BRI_DN        &kp LALT            &kp UNDER           &kp TILDE           &kp GRAVE           &kp PRCNT               &kp AT              &kp LBKT            &kp RBKT            &kp POUND           &kp ASTRK           &none
                                                            &trans              &trans              &trans                  &caps_word          &kp UNDER
                                                                                &trans              &trans                  &trans >; };
        layer_4 { bindings = <
&none               &none               &none               &none               &none               &none                   &none               &none               &none               &none               &none               &none
&none               &bt BT_SEL 0        &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3        &bt BT_SEL 4            &bl BL_DEC          &rgb_ug RGB_HUI     &rgb_ug RGB_SAI     &rgb_ug RGB_BRI     &rgb_ug RGB_SPI     &none
&none               &bt BT_CLR          &bt BT_PRV          &out OUT_TOG        &bt BT_NXT          &bt BT_CLR_ALL          &bl BL_TOG          &rgb_ug RGB_EFR     &rgb_ug RGB_TOG     &rgb_ug RGB_EFF     &studio_unlock      &none
&none               &bt BT_DISC 0       &bt BT_DISC 1       &bt BT_DISC 2       &bt BT_DISC 3       &bt BT_DISC 4           &bl BL_INC          &rgb_ug RGB_HUD     &rgb_ug RGB_SAD     &rgb_ug RGB_BRD     &rgb_ug RGB_SPD     &none
                                                            &trans              &bootloader         &trans                  &trans              &bootloader
                                                                                &trans              &trans                  &trans >; };
    };
    combos { compatible = "zmk,combos";
        left_finger_13_row_3 { require-prior-idle-ms = <(-1)>; layers = <2>; key-positions = <38 40>; bindings = <&mkp MCLK>; };
        left_finger_12_row_4 { require-prior-idle-ms = <(-1)>; layers = <0>; key-positions = <48 49>; bindings = <&ls 3 LALT>; };
        left_finger_02_row_4 { require-prior-idle-ms = <(-1)>; layers = <0>; key-positions = <48 50>; bindings = <&mo 4>; };

        // left_finger_4_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <13 25>; bindings = <&kp TILDE>; };
        // left_finger_3_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <14 26>; bindings = <&kp EXCL>; };
        // left_finger_2_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <15 27>; bindings = <&kp LPAR>; };
        // left_finger_1_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <16 28>; bindings = <&kp RPAR>; };
        // left_finger_0_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <17 29>; bindings = <&kp PRCNT>; };

        // // left_finger_01_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <16 17 28 29>; bindings = <&kp INS>; };

        // left_finger_4_row_23 { require-prior-idle-ms = <(-1)>; layers = <0  >; key-positions = <25 37>; bindings = <&kp GRAVE>; };
        // left_finger_3_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <26 38>; bindings = <&kp DQT>; };
        // left_finger_2_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <27 39>; bindings = <&kp SQT>; };
        // left_finger_1_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <28 40>; bindings = <&mkp LCLK>; };
        // left_finger_0_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <29 41>; bindings = <&mkp RCLK>; };

        // left_finger_01_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <28 29 40 41>; bindings = <&mkp MCLK>; };

        // rght_finger_0_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <18 30>; bindings = <&kp BSLH>; }; 
        // rght_finger_1_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <19 31>; bindings = <&kp LBRC>; };
        // rght_finger_2_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <20 32>; bindings = <&kp RBRC>; };
        // rght_finger_3_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <21 33>; bindings = <&kp LBKT>; };
        // rght_finger_4_row_12 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <22 34>; bindings = <&kp RBKT>; };

        // rght_finger_0_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <30 42>; bindings = <&kp AT>; };
        // rght_finger_1_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <31 43>; bindings = <&kp UNDER>; };
        // rght_finger_2_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <32 44>; bindings = <&kp EQUAL>; };
        // rght_finger_3_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <33 45>; bindings = <&kp PIPE>; };
        // rght_finger_4_row_23 { require-prior-idle-ms = <(-1)>; layers = <0 1>; key-positions = <34 46>; bindings = <&kp AMPS>; };

        // left_finger_34_row_1 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <13 14>; bindings = <&kp F9>; };
        // left_finger_23_row_1 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <14 15>; bindings = <&kp F8>; };
        // left_finger_12_row_1 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <15 16>; bindings = <&kp F7>; };
        // left_finger_01_row_1 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <16 17>; bindings = <&kp F10>; };

        // left_finger_34_row_2 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <25 26>; bindings = <&kp F6>; };
        // left_finger_23_row_2 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <26 27>; bindings = <&kp F5>; };
        // left_finger_12_row_2 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <27 28>; bindings = <&kp F4>; };
        // left_finger_01_row_2 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <28 29>; bindings = <&kp F11>; };

        // left_finger_34_row_3 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <37 38>; bindings = <&kp F3>; };
        // left_finger_23_row_3 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <38 39>; bindings = <&kp F2>; };
        // left_finger_12_row_3 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <39 40>; bindings = <&kp F1>; };
        // left_finger_01_row_3 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <40 41>; bindings = <&kp F12>; };

        // rght_finger_01_row_1 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <18 19>; bindings = <&kp C_BRI_UP>; };
        // rght_finger_12_row_1 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <19 20>; bindings = <&kp C_VOL_UP>; };
        // rght_finger_23_row_1 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <20 21>; bindings = <&kp C_PREV>; };
        // rght_finger_34_row_1 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <21 22>; bindings = <&kp PSCRN>; };

        // rght_finger_01_row_2 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <30 31>; bindings = <&kp K_APP>; };
        // rght_finger_12_row_2 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <31 32>; bindings = <&kp C_MUTE>; };
        // rght_finger_23_row_2 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <32 33>; bindings = <&kp C_PP>; };
        // rght_finger_34_row_2 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <33 34>; bindings = <&kp SLCK>; };

        // rght_finger_01_row_3 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <42 43>; bindings = <&kp C_BRI_DN>; };
        // rght_finger_12_row_3 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <43 44>; bindings = <&kp C_VOL_DN>; };
        // rght_finger_23_row_3 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <44 45>; bindings = <&kp C_NEXT>; };
        // rght_finger_34_row_3 { require-prior-idle-ms = <120>; layers = <0 1>; key-positions = <45 46>; bindings = <&kp PAUSE_BREAK>; };
    };
};
